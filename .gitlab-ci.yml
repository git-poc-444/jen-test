# Node Image for docker on which code will execute
image: node:latest

# This is the stages / task to perfom in jobs
stages:
  - build
  - deploy
  
# caching for reuse 
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/
  - dist/  
  
# This command is run before the execution of stages   
before_script:
  - npm install

# Job One for making build
build_master:
  stage: build
  script:
  - npm run build
  only: ['master']
  artifacts:
    paths:
        - dist/

# Job Two for deploy build to server
deploy_master:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
#    - chmod 400 ~/$SSH_PRIVATE_KEY
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - apt-get update -y
    - apt-get install sshpass
    - apt-get -y install rsync
  dependencies:
    - build
  script:
#    - ssh ubuntu@$DEPLOY_SERVER
    - sshpass -p Lets@1118 ssh ubuntu@$DEPLOY_SERVER
#    - rsync -zvhr -auv -e ssh dist/ ubuntu@$DEPLOY_SERVER:/var/www/test-angular-cicd/dist/
    # - sh ‘ssh ubuntu@$DEPLOY_SERVER rm -rf /var/www/test-angular-cicd/dist/pwa-example’
    # - sh ‘ssh ubuntu@$DEPLOY_SERVER mkdir -p /var/www/test-angular-cicd/dist/’
    - sh ‘scp -r dist/ user@$DEPLOY_SERVER:/var/www/test-angular-cicd/dist/’
#    - sh deploy.sh
  only: ['master']